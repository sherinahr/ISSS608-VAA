---
title: "Hands-on_Ex02"
author: "Sherinah Rashid"
---

# **Beyond ggplot2 Fundamentals**

# **2.1 Overview**

In this chapter, you will be introduced to several ggplot2 extensions for creating more elegant and effective statistical graphics. By the end of this exercise, you will be able to:

-   control the placement of annotation on a graph by using functions provided in ggrepel package,

-   create professional publication quality figure by using functions provided in ggthemes and hrbrthemes packages,

-   plot composite figure by combining ggplot2 graphs by using patchwork package.

# **2.2 Getting started**

## **2.2.1 Installing and loading the required libraries**

In this exercise, beside tidyverse, four R packages will be used. They are:

-   ggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels.

-   ggthemes: an R package provides some extra themes, geoms, and scales for 'ggplot2'.

-   hrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.

-   patchwork: an R package for preparing composite figure created using ggplot2.

Code chunk below will be used to check if these packages have been installed and also will load them onto your working R environment.

```{r}
pacman::p_load(ggrepel, patchwork, 
               ggthemes, hrbrthemes,
               tidyverse) 
```

## **2.2.2 Importing data**

For the purpose of this exercise, as in Hands-on Exercise 1, a data file called Exam_data will be used.

```{r}
#| warning: false 
exam_data <-read_csv("data/Exam_data.csv")
```

# **2.3 Beyond ggplot2 Annotation: ggrepel**

One of the challenge in plotting statistical graph is annotation, especially with large number of data points.

::: panel-tabset
### The plot

```{r}
#| echo: false 
ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              linewidth=0.5) +  
  geom_label(aes(label = ID), 
             hjust = .5, 
             vjust = -.5) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

### The code

```{r}
#| eval: false

library(ggplot2)
ggplot(data=exam_data, aes(x = MATHS)) +
  geom_histogram(bins=10, 
                 boundary = 100,
                 color="white", 
                 fill="lightpink2") +
  ggtitle("Distribution of Maths Scores") +theme_classic() 
  
```
:::

[ggrepel](https://ggrepel.slowkow.com/) is an extension of ggplot2 package which provides geoms for ggplot2 to repel overlapping text as in our example above.

We simply replace geom_text() by [geom_text_repel()](https://ggrepel.slowkow.com/reference/geom_text_repel.html) and geom_label() by [geom_label_repel](https://ggrepel.slowkow.com/reference/geom_text_repel.html).

## **2.3.1 Working with ggrepel**

::: panel-tabset
### The plot

```{r}
#| echo: false 
#| warning: false

ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

### The code

```{r}
#| eval: false
#| warning: false

ggplot(data=exam_data, 
       aes(x= MATHS, 
           y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  geom_label_repel(aes(label = ID), 
                   fontface = "bold") +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
  
```
:::

# **2.4 Beyond ggplot2 Themes**

ggplot2 comes with eight [built-in themes](https://ggplot2.tidyverse.org/reference/ggtheme.html), they are: theme_gray(), theme_bw(), theme_classic(), theme_dark(), theme_light(), theme_linedraw(), theme_minimal(), and theme_void().

::: panel-tabset
### The plot

```{r}
#| echo: false 
#| warning: false

ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_gray() +
  ggtitle("Distribution of Maths scores") 
```

### The code

```{r}
#| eval: false
#| warning: false

ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_gray() +
  ggtitle("Distribution of Maths scores") 
  
```
:::

## **2.4.1 Working with ggtheme package**

[ggthemes](https://cran.r-project.org/web/packages/ggthemes/) provides ['ggplot2' themes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) that replicate the look of plots by Edward Tufte, Stephen Few, [Fivethirtyeight](https://fivethirtyeight.com/), [The Economist](https://www.economist.com/graphic-detail), 'Stata', 'Excel', and [The Wall Street Journal](https://www.pinterest.com/wsjgraphics/wsj-graphics/), among others. In the example below, The Economist theme is used.It also provides some extra geoms and scales for 'ggplot2'. Consult [this vignette](https://mran.microsoft.com/snapshot/2016-12-28/web/packages/ggthemes/vignettes/ggthemes.html) to learn more.

::: panel-tabset
### The plot

```{r}
#| echo: false 
#| warning: false

ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_economist() +
  ggtitle("Distribution of Maths scores") 
```

### The code

```{r}
#| eval: false
#| warning: false

ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  theme_economist() +
  ggtitle("Distribution of Maths scores") 
  
```
:::

## **2.4.2 Working with hrbthemes package**

[hrbrthemes](https://cinc.rud.is/web/packages/hrbrthemes/) package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.

::: panel-tabset
### The plot

```{r}
#| echo: false 
#| warning: false

ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()

```

### The code

```{r}
#| eval: false
#| warning: false

ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
  
```
:::

The second goal centers around productivity for a production workflow. In fact, this "production workflow" is the context for where the elements of hrbrthemes should be used. Consult [this vignette](https://cran.r-project.org/web/packages/hrbrthemes/vignettes/why_hrbrthemes.html) to learn more.

::: panel-tabset
### The plot

```{r}
#| echo: false 
#| warning: false

ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size = 15,
              grid = "Y")

```

### The code

```{r}
#| eval: false
#| warning: false

ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 18,
              base_size = 15,
              grid = "Y")
  
```
:::

::: {.callout-note title="What can we learn from the code chunk above?"}
## What can we learn from the code chunk above?

-   The axis_title_size argument is used to increase the font size of the axis title to 18
-   The base_size argument is used to increase the default axis label to 15
-   The grid argument is used to remove the x-axis grid lines
:::

# **2.5 Beyond Single Graph**

It is not unusual that multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions which provide functions to compose figures with multiple graphs. In this section, you will learn how to create a composite plot by combining multiple graphs. First, let us create three statistical graphics by using the code chunk below.

Firstly, the Maths scores.

::: panel-tabset
### The plot

```{r}
#| echo: false 
#| warning: false

p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores")
p1

```

### The code

```{r}
#| eval: false
#| warning: false

p1 <- ggplot(data=exam_data, 
             aes(x = MATHS)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores")
p1 

```
:::

Secondly, the English scores.

::: panel-tabset
### The plot

```{r}
#| echo: false 
#| warning: false

p2 <- ggplot(data=exam_data, 
             aes(x = ENGLISH)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores")
p2

```

### The code

```{r}
#| eval: false
#| warning: false

p2 <- ggplot(data=exam_data, 
             aes(x = ENGLISH)) +
  geom_histogram(bins=20, 
                 boundary = 100,
                 color="grey25", 
                 fill="grey90") +
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores")
p2

```
:::

Lastly, a scatterplot for English scores versus Maths scores.

::: panel-tabset
### The plot

```{r}
#| echo: false 
#| warning: false

p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
p3

```

### The code

```{r}
#| eval: false
#| warning: false

p3 <- ggplot(data=exam_data, 
             aes(x= MATHS, 
                 y=ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, 
              size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
p3

```
:::

## **2.5.1 Creating Composite Graphics: Patchwork methods**

There are several ggplot2 extension's functions to support the needs to prepare composite figure by combining several graphs such as [grid.arrange()](https://cran.r-project.org/web/packages/gridExtra/vignettes/arrangeGrob.html) of gridExtra package and [plot_grid()](https://wilkelab.org/cowplot/reference/plot_grid.html) of [cowplot](https://wilkelab.org/cowplot/) package. In this section, an ggplot2 extension called patchwork will be used to combine separate ggplot2 graphs into a single figure.

Patchwork package has a very simple syntax where we can create layouts super easily. Here's the general syntax that combines:

-   Two-Column Layout using the Plus Sign +.

-   Parenthesis () to create a subplot group.

-   Two-Row Layout using the Division Sign `/`

## **2.5.2 Combining two ggplot2 graphs**

Figure in the tabset below shows a composite of two histograms created using patchwork. Note how simple the syntax used to create the plot is!

::: panel-tabset
### The plot

```{r}
#| echo: false 
#| warning: false
#| fig-width: 14
#| fig-asp: 0.618

p1 + p2

```

### The code

```{r}
#| eval: false
#| warning: false
#| fig-width: 14
#| fig-asp: 0.618

p1 + p2

```
:::

## **2.5.3 Combining three ggplot2 graphs**

We can plot more complex composites by using appropriate operators. For example, the composite figure below is plotted by using:

-   "\|" operator to stack two ggplot2 graphs
-   "/" operator to place the plots beside each other
-   "()" operator the define the sequence of the plotting

To learn more about, refer to [Plot Assembly](https://patchwork.data-imaginist.com/articles/guides/assembly.html).

::: panel-tabset
### The plot

```{r}
#| echo: false 
#| warning: false
#| fig-width: 14
#| fig-asp: 0.618

((p1 / p2) | p3) &
  theme(title=element_text(size=7, face ='bold'))

```

### The code

```{r}
#| eval: false
#| warning: false
#| fig-width: 14
#| fig-asp: 0.618

((p1 / p2) | p3) &
  theme(title=element_text(size=7, face ='bold'))

```
:::

## **2.5.4 Creating a composite figure with tag**

In order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.

::: panel-tabset
### The plot

```{r}
#| echo: false 
#| warning: false
#| fig-width: 14
#| fig-asp: 0.618

grid <- ((p1 / p2) | p3) + plot_annotation(tag_levels = 'I') 
grid & theme(title=element_text(size=7, face ='bold')) 


```

### The code

```{r}
#| eval: false
#| warning: false
#| fig-width: 14
#| fig-asp: 0.618

grid <- ((p1 / p2) | p3) + plot_annotation(tag_levels = 'I') 
grid & theme(title=element_text(size=7, face ='bold')) 

```
:::

## **2.5.5 Creating figure with insert**

Beside providing functions to place plots next to each other based on the provided layout, with [inset_element()](https://patchwork.data-imaginist.com/reference/inset_element.html) of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.

::: panel-tabset
### The plot

```{r}
#| echo: false 
#| warning: false
#| fig-width: 14
#| fig-asp: 0.618

p12 <- p1|p2
p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)

```

### The code

```{r}
#| eval: false
#| warning: false
#| fig-width: 14
#| fig-asp: 0.618

p12 <- p1|p2
p3 + inset_element(p2, 
                   left = 0.02, 
                   bottom = 0.7, 
                   right = 0.5, 
                   top = 1)

```
:::

## **2.5.6 Creating a composite figure by using patchwork and ggtheme**

Figure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.

::: panel-tabset
### The plot

```{r}
#| echo: false 
#| warning: false
#| fig-width: 14
#| fig-asp: 0.618

patchwork <- (p1 / p2) | p3
patchwork & theme_economist() + theme(title=element_text(size = 6, face ='bold'), 
                                      axis.title.y=element_text(size = 9), axis.title.x=element_text(size = 9)) 

```

### The code

```{r}
#| eval: false
#| warning: false
#| fig-width: 14
#| fig-asp: 0.618

patchwork <- (p1 / p2) | p3
patchwork & theme_economist() + theme(title=element_text(size = 6, face ='bold'), 
                                      axis.title.y=element_text(size = 9), axis.title.x=element_text(size = 9))  

```
:::

# **2.6 Reference**

-   [Patchwork R package goes nerd viral](https://www.littlemissdata.com/blog/patchwork)

-   [ggrepel](https://ggrepel.slowkow.com/)

-   [ggthemes](https://ggplot2.tidyverse.org/reference/ggtheme.html)

-   [hrbrthemes](https://cinc.rud.is/web/packages/hrbrthemes/)

-   [ggplot tips: Arranging plots](https://albert-rapp.de/post/2021-10-28-extend-plot-variety/)

-   [ggplot2 Theme Elements Demonstration](https://henrywang.nl/ggplot2-theme-elements-demonstration/)

-   [ggplot2 Theme Elements Reference Sheet](https://isabella-b.com/blog/ggplot2-theme-elements-reference/)

---
title: "Hands on Ex 5"
---

Today's hands-on exercise is about network visualisation, where four network data modelling and visualisation packages will be installed and launched.

## **1.1 The Dataset**

The dataset used are from an oil exploration and extraction company. There are two data sets. One contains the data on nodes and the other contains the edges (also know as links) data.

-   *GAStech-email_edges.csv* which consists of two weeks of 9063 emails correspondances between 55 employees.

-   *GAStech_email_nodes.csv* which consist of the names, department and title of the 55 employees.

Let's first load the packages and datasets to be used.

```{r}
pacman::p_load(igraph, tidygraph, ggraph, 
               visNetwork, lubridate, clock,
               tidyverse, graphlayouts)
```

```{r}
GAStech_nodes <- read_csv("data/GAStech_email_node.csv", show_col_types = FALSE)
GAStech_edges <- read_csv("data/GAStech_email_edge-v2.csv", show_col_types = FALSE)
```

## **1.2 The Dataset**

We will examine the structure of the data frame using glimpse() of dplyr.

```{r}
glimpse(GAStech_edges)
```
The output report of GAStech_edges above reveals that the SentDate is treated as “Character” data type instead of date data type. Before we continue, it is important for us to change the data type of SentDate field to “Date”” data type.The code chunk below will be used to perform the changes.

```{r}
GAStech_edges <- GAStech_edges %>%
  mutate(SendDate = dmy(SentDate)) %>%
  mutate(Weekday = wday(SentDate,
                        label = TRUE,
                        abbr = FALSE))
```

A close examination of GAStech_edges data.frame reveals that it consists of individual e-mail flow records. This is not very useful for visualisation. In view of this, we will aggregate the individual by date, senders, receivers, main subject and day of the week.

```{r}
#| output: false
GAStech_edges_aggregated <- GAStech_edges %>%
  filter(MainSubject == "Work related") %>%
  group_by(source, target, Weekday) %>%
    summarise(Weight = n()) %>%
  filter(source!=target) %>%
  filter(Weight > 1) %>%
  ungroup()
```

Now let's review the aggregated dataset. It looks great, good job!

```{r}
glimpse(GAStech_edges_aggregated)
```
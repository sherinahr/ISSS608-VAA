---
title: "Demographic & Financial Analysis of City of Engagement"
author: "Sherinah Rashid"
tbl-cap-location: top
highlight-style: breeze
format:
  html: 
    code-fold: true
    code-tools: true
    code-summary: "Show code"
    code-overflow: wrap
    code-block-bg: true
    code-block-border-left: "#18661c"
execute:
  eval: true
  echo: true
  warning: false
  freeze: auto
---

## **Overview**

### **1.1 Introduction**

City of Engagement, with a total population of 50,000, is a small city located at Country of Nowhere. The city serves as a service centre of an agriculture region surrounding the city. The main agriculture of the region is fruit farms and vineyards. The local council of the city is in the process of preparing the Local Plan 2023. A sample survey of 1000 representative residents had been conducted to collect data related to their household demographic and spending patterns, among other things. The city aims to use the data to assist with their major community revitalization efforts, including how to allocate a very large city renewal grant they have recently received.

This take-home exercise will explore the demographic and financial characteristics of the city of Engagement using static and interactive statistical graphics methods. The data will be processed using the [tidyverse](https://www.tidyverse.org/) family of packages and the visualisations developed using [ggplot2](https://ggplot2.tidyverse.org/index.html) and its extensions.

Specifically, this exercise seeks to fulfill the following objectives using Exploratory & Confirmatory Data Analysis:

-   Explore the factors influencing joviality index and

-   Explore the factors influencing income.

### **1.2 The Data**

Two data sets in csv format are provided for the purpose of this exercise - Participants & Financial Journal.

#### **1.2.1 Participants Dataset**

This dataset contains information about the residents of City of Engagement that have agreed to participate in this study and comprises the following fields:

+-------------------------+-----------------------------------------------------------------------------------------------------------+
| Field                   | Description                                                                                               |
+=========================+===========================================================================================================+
| participantId (integer) | Unique ID assigned to each participant                                                                    |
+-------------------------+-----------------------------------------------------------------------------------------------------------+
| householdSize (integer) | Number of people in the household                                                                         |
+-------------------------+-----------------------------------------------------------------------------------------------------------+
| haveKids (boolean)      | Presence of children in the household                                                                     |
+-------------------------+-----------------------------------------------------------------------------------------------------------+
| age (integer)           | Participant's age in years at the start of the study                                                      |
+-------------------------+-----------------------------------------------------------------------------------------------------------+
| educationLevel          | Participant's education level                                                                             |
|                         |                                                                                                           |
| (string factor)         | \[Low, HighSchoolorCollege, Bachelors, Graduate\]                                                         |
+-------------------------+-----------------------------------------------------------------------------------------------------------+
| interestGroup (char)    | Character representing the participant's stated primary interest group \[A,B,C,D,E,F,G,H,I,J\]            |
+-------------------------+-----------------------------------------------------------------------------------------------------------+
| joviality (float)       | Value ranging from \[0,1\] indicating the participant's overall happiness level at the start of the study |
+-------------------------+-----------------------------------------------------------------------------------------------------------+

: Data Fields - Participants.csv

#### **1.2.2 FinancialJournal Dataset**

This dataset contains information about the residents of City of Engagement that have agreed to participate in this study and comprises the following fields:

+-------------------------+----------------------------------------------------------------+
| Field                   | Description                                                    |
+=========================+================================================================+
| participantId (integer) | Unique ID assigned to each participant                         |
+-------------------------+----------------------------------------------------------------+
| timestamp (datetime)    | Time when the check-in was logged                              |
+-------------------------+----------------------------------------------------------------+
| category                | String describing the expense category                         |
|                         |                                                                |
| (string factor)         | \[Education, Food, Recreation, RentAdjustment, Shelter, Wage\] |
+-------------------------+----------------------------------------------------------------+
| amount (double)         | Amount of the transaction                                      |
+-------------------------+----------------------------------------------------------------+

: Data Fields - FinancialJournal.csv

#### **1.2.3 Challenges with the Datasets**

There are a few data quality issues with the datasets:

1.  The timestamp information in the FinancialJournal.csv is too granular and should be changed to reflect the month and year instead.

2.  A quick analysis showed that there were duplicates in the data; these will be removed to ensure the data will not be skewed.

3.  The quick analysis also highlighted that there were some participants who did not have entries for all 6 months; it is possible that they are no longer residents of the City. Since the aim of this exercise is to explore the financial trends of the residents, these participants will be removed.

4.  The data is on an individual level and thus will be aggregated accordingly for the analyses.

5.  The data types have to be checked as well.

6.  After addressing the above issues, the datasets should be combined to ensure a comprehensive and accurate analysis.

::: callout-important
It is important to ensure that the datasets have been comprehensively cleaned prior to conducting analyses, to ensure our visualisations are accurate and informative!
:::

## **Data Preparation**

### **2.1 Install and Launch R packages**

In this exercise, the following packages will be used: tidyverse, ggplot2, dplyr, patchwork, ggthemes, hrbrthemes, and ggrepel. The codechunk below will be used to check if these packages have been installed and also will load them onto the working R environment:

```{r}
pacman::p_load(ggrepel, patchwork, ggplot2, dplyr,
               ggthemes, hrbrthemes, zoo, DT,
               tidyverse) 
```

### **2.2 Import Datasets**

The code chunk below imports the datasets into R environment by using read_csv() function of readr package as part of tidyverse.

```{r}
ppt <-read_csv("data/Participants.csv", show_col_types = FALSE)
fj <- read_csv("data/FinancialJournal.csv", show_col_types = FALSE)
```

The summary and spec() function is used to provide an overview of the central tendencies, and data types of the datasets.

```{r}
summary(ppt)
spec(ppt)
```

```{r}
summary(fj)
spec(fj)
```

### **2.3 Data Wrangling**

#### **2.3.1 Participants Dataset**

There are a few data quality issues:

Firstly, the age variable is binned with the following code chunk. The mutate() function of dplyr is used to create a new variable called Age_Category while preserving the existing variable of age.

```{r}
#| output: false

ppt <- ppt %>%
  mutate(Age_Category=cut(age, 
                          breaks=c(17, 20, 30, 40, 50, 60),
                          labels=c('20 & Below', '21-30', '31-40', 
                                   '41-50', '51 and above')))

# Check if the ages are reflected correctly
head(ppt$age)
head(ppt$Age_Category)

```

Next, a few of the columns were not set to the appropriate data type. For example, participantID should be categorical but it shows as a continuous numeric variable. Further, we would need the education level to be read as an ordinal factor as there are levels for education. As above, the mutate() function will be used to update the data types.

```{r}
#| output: false

ppt <- ppt %>% mutate(participantId = as.factor(participantId))
ppt <- ppt %>% mutate(educationLevel = factor(educationLevel, 
                                              levels=c("Low", "HighSchoolOrCollege", "Bachelors", "Graduate")))

# Check data types
str(ppt)

```

Lastly, we will rename the other columns for nicer formatting and ease of reading with the below code chunk. As we are not making changes to the values, the column names will be amended in place.

```{r}
#| output: false

ppt <- ppt %>%
  rename('ParticipantID' = 'participantId', 
         'HouseholdSize' = 'householdSize', 
         'EducationLevel' = 'educationLevel', 
         'InterestGroup' = 'interestGroup', 
         'Joviality' = 'joviality',
         'HaveKids' = 'haveKids')

# Check if the changes are reflected correctly
colnames(ppt)

```

#### **2.3.2 FinancialJournal Dataset**

As stated in section 1.2.3 Challenges, there are a number of issues with the dataset.

Firstly, the data type for participantId was changed as above.

```{r}
#| output: false

fj <- fj %>% mutate(participantId = as.factor(participantId))

# Check data types
str(fj)

```

Next, there are some duplicate rows in the dataset which have to be removed using the distinct() function. As the code below shows, there were 1,113 duplicate rows in the FinancialJournal dataset.

```{r}
fj_2 <- fj %>% distinct()
nrow(fj) - nrow(fj_2)
```

Next, there were some participants who did not have entries for all 6 months. To find the these participants, first the data was grouped by the participantId. Examination of the results show that there are 131 participants which have lower than 1,000 transactions.

```{r}
#| output: false

fj_2 %>%
  group_by(participantId) %>%
  summarize(transaction_count = n()) %>%
  arrange(transaction_count)
```

The code chunk below will filter out these 131 participants. The data frame fj_final now has no duplicates, and only residents who still live in City of Engagement.

```{r}
#| output: false
fj_final <- subset(fj_2, with(fj_2, participantId %in% 
                            names(which(table(participantId)>=1000))))
head(fj_final)
```

Next, we would want to convert all of the timestamp data into Month-Year format for ease of comparison using the first line of code. However, the result would be in character format which is not advisable for analysis, and so we will run the subsequent line of code to change it to Date format.

```{r}

fj_final <- fj_final %>%
  mutate (Year_month = as.yearmon(timestamp))

fj_final <- transform(fj_final, Year_month = as.Date(Year_month, frac = 0))

head(fj_final)

```

Further, most of the values are negative as they reflect expenditures for food, education, recreation and shelter. The positive amounts are for wage and [rent adjustment](https://www.lawinsider.com/dictionary/rent-adjustment-amount). The data will also be changed from long to wide format for easier reading using the pivot_wider() function.

```{r}
#| output: false

fj_final$amount <- abs(fj_final$amount)
fj_final$amount <- round(fj_final$amount,digits=0)

fj_wide <- fj_final %>%
  group_by(participantId, Year_month, category) %>%
  summarise(Total = sum(amount)) %>%
  pivot_wider(names_from = category, values_from = Total)

# Replace NA values with 0 for Rent Adjustment
fj_wide[is.na(fj_wide)] <- 0

head(fj_wide)

```

To find out the cost of living and total income of the residents, the values of the expenses for the four categories, and the wage and rent adjustment will be summed up respectively. We will also derive the total savings i.e. Total income - Cost of living.

```{r}

fj_wide$Cost_of_living <- fj_wide$Education + 
  fj_wide$Food + fj_wide$Recreation + 
  fj_wide$Shelter

fj_wide$Total_Income <- fj_wide$Wage + 
  fj_wide$RentAdjustment

fj_wide$Total_Savings <- fj_wide$Total_Income - fj_wide$Cost_of_living

```

Lastly, we will rename the participantId column in place for consistency.

```{r}
#| output: false

fj_wide <- fj_wide %>%
  rename('ParticipantID' = 'participantId')

# Check if the changes are reflected correctly
colnames(fj_wide)

```

#### **2.3.3 Combining the Datasets**

Now that data cleaning is done, let's merge the datasets! We need to ensure that for the participants.csv, we only keep the distinct participants that were in our fj_wide csv. Let's see what the final dataset looks like with the following code chunk.

```{r}

merged <- merge(fj_wide, ppt, by = "ParticipantID", all.x = TRUE)

final <- subset(merged, ParticipantID %in% fj_wide$ParticipantID)

DT::datatable(final, class = "compact")

```

## **Visualisation**

## **3. What influences Joviality?**

In this section, we will first take a quick look at the demographic profile of the residents. Simple visualisations which show the distributions will be used, such as pie, line, and bar charts. Based on these, we will conduct confirmatory data analyses.

### **3.1. Age & Education**

The adult residents (aged 21 and above) are quite evenly distributed in the City. As for education level, almost half (48%) of the residents had at least high school or college education, and 45% had at least a Bachelor's degree. 

::: panel-tabset
### Plot

```{r}
#| echo: false 

#Calculate the proportion of residents in each category
age_category_proportion <- final %>%
  count(Age_Category) %>%
  mutate(prop = n/sum(n))

#Plot the pie chart for Age Category
p1 <- ggplot(age_category_proportion, aes(x="", y=prop, fill=Age_Category)) +
  geom_bar(stat="identity", width=1, color="white") +
  coord_polar("y", start=0) +
  theme_void() +
  geom_text(aes(label = paste0(round(prop*100), "%")), position = position_stack(vjust = 0.5), size = 3) +
  scale_fill_brewer(palette="Pastel2") +
  ggtitle("Distribution of Age (%)") +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(fill ="Age Category")

#Calculate the proportion of residents in each category
education_proportion <- final %>%
  count(EducationLevel) %>%
  mutate(prop = n/sum(n))

#Plot the pie chart for Education level
p2 <- ggplot(education_proportion, aes(x="", y=prop, fill=EducationLevel)) +
  geom_bar(stat="identity", width=1, color="white") +
  coord_polar("y", start=0) +
  theme_void() +
  geom_text(aes(label = paste0(round(prop*100), "%")), position = position_stack(vjust = 0.5), size = 3) +
  scale_fill_brewer(palette="Pastel2") +
  ggtitle("Distribution of Education Level (%)") +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(fill ="Education Level")
  
(p1+p2)
```

### Code

```{r}
#| eval: false

#Calculate the proportion of residents in each category
age_category_proportion <- final %>%
  count(Age_Category) %>%
  mutate(prop = n/sum(n))

#Plot the pie chart for Age Category
p1 <- ggplot(age_category_proportion, aes(x="", y=prop, fill=Age_Category)) +
  geom_bar(stat="identity", width=1, color="white") +
  coord_polar("y", start=0) +
  theme_void() +
  geom_text(aes(label = paste0(round(prop*100), "%")), position = position_stack(vjust = 0.5), size = 3) +
  scale_fill_brewer(palette="Pastel2") +
  ggtitle("Distribution of Age (%)") +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(fill ="Age Category")

#Calculate the proportion of residents in each category
education_proportion <- final %>%
  count(EducationLevel) %>%
  mutate(prop = n/sum(n))

#Plot the pie chart for Education level
p2 <- ggplot(education_proportion, aes(x="", y=prop, fill=EducationLevel)) +
  geom_bar(stat="identity", width=1, color="white") +
  coord_polar("y", start=0) +
  theme_void() +
  geom_text(aes(label = paste0(round(prop*100), "%")), position = position_stack(vjust = 0.5), size = 3) +
  scale_fill_brewer(palette="Pastel2") +
  ggtitle("Distribution of Education Level (%)") +
  theme(plot.title = element_text(hjust = 0.5)) +
  labs(fill ="Education Level")
  
(p1/p2)
```
:::

### **3.2. Household Size and Children**

Residents of the City tend to have nuclear households, with a maximum of 3 members in a household. From the bar chart, we can see that about one-third of the residents have children. 

::: panel-tabset
### Plot

```{r}
#| echo: false 

#Plot the bar chart for HHsize Category
p1 <- ggplot(data = final,
       aes(x = HouseholdSize, fill = HaveKids)) +
  geom_bar() +
  geom_text(aes(label=..count..),
            stat="count",
            vjust=1.5,
            color="black") +
  theme_classic() +
  xlab("Household Size (Persons)") +
  ylab("No. of\nResidents") +
  ggtitle("Distribution of Household Size") +
  scale_fill_brewer(palette="Pastel2")
p1
```

### Code

```{r}
#| eval: false

#Plot the bar chart for HHsize Category
p1 <- ggplot(data = final,
       aes(x = HouseholdSize, fill = HaveKids)) +
  geom_bar() +
  geom_text(aes(label=..count..),
            stat="count",
            vjust=1.5,
            color="black") +
  theme_classic() +
  xlab("Household Size (Persons)") +
  ylab("No. of\nResidents") +
  ggtitle("Distribution of Households") +
  scale_fill_brewer(palette="Pastel2")
p1
```
:::

### **3.3. Joviality**



## **4. What influences income?**

### **4.1. Education and smth**



## **4. Key Takeaways**
